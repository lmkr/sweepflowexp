13/11/2012
==========

Initial investigations

dos2unix has to be used on the dve file in order to make it compile.

In the bloodtest example there was one occurence of X,c==1 that was
changed to X && c==1.

The bloodtest workflow in models/bloodtest can be compiled using:

%> sml
- CM.make "/cygdrive/d/cpndev/trunk/siminterface/dve/dve.cm";
- CM.make "/cygdrive/d/cpndev/trunk/asap/platform.cm";
- CM.make "/cygdrive/d/cpndev/trunk/siminterface/interfaces/model-sig.cm";

- use "btload.sml";
- compilebt ();

- CM.make "compiled/all.cm";

The following generated files contains use of signatures that do not exists:

- model.sml
- serialiser.sml
- hashfunction.sml
- independence-relation.sml

14/01/2013
==========

Setup of a git repository to be able to do development across several
machines and in order to have version control.

Created build.sml build ml files in bloodtest example. Loads
everything.

Created buildbt.sml to load the compiled files.

The problem with model.sml seems to be related to getCurrentState and
getEvents which are not matched by the opened structures. Perhaps
getCurrentState should not be there since it means that the simulator
is not function. getEvent should possibly be getEnabledEvents

15/01/2013
==========

Setup and initial attempt at compiling the senior care workflow.

Most works fine, but there is a problem with the commit construct.

16/01/2013
==========

Received version from Rabbi that can be compiled and do not contain tbe commit construction.

12/02/2013
==========

Work on fixing problems with MODEL signature: getEvents and
getCurrentState is missing in the autongenerated code.

It seems that getEnabledEvents should have been getEvents. Fix by adding a line in model.sml

Problem with getCurrentState. The problem can be fixedx in model.sml by adding:


val getEvents = getEnabledEvents;
exception getCurrentStateExn;
fun getCurrentState () = raise getCurrentStateExn;

for some reason changing the dve-model-compiled do not affect the
generated code. A potential problem with the compilation manager?


Current the work process is to use "build.sml"; and then use
"loadcompiled.sml" after having fixed compilation error related to
MODEL. Then "run.sml" can be used to execute the model.

Setup basic exploration and sweep-line exploration with a simple
progress measure using the control variables. It could be refined
further to take into account also the disabled, enabled, running and
completed substates. State space has 38 states and 46 arcs. The peak
currently is 16.

At thus stage it suffices to simply load CM.make "platform.cm" and
then loadcompiled.sml

